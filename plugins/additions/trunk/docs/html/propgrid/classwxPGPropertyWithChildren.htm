<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>wxPropertyGrid: wxPGPropertyWithChildren Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.htm"><span>Modules</span></a></li>
    <li id="current"><a href="classes.htm"><span>Classes</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.htm"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>wxPGPropertyWithChildren Class Reference</h1><!-- doxytag: class="wxPGPropertyWithChildren" --><!-- doxytag: inherits="wxPGProperty" --><a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a>, alias <a class="el" href="classwxParentPropertyClass.htm">wxParentPropertyClass</a>, is a base class for new properties that have sub-properties.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;propgrid.h&gt;</code>
<p>
<p>Inheritance diagram for wxPGPropertyWithChildren:
<p><center><img src="classwxPGPropertyWithChildren.png" usemap="#wxPGPropertyWithChildren_map" border="0" alt=""></center>
<map name="wxPGPropertyWithChildren_map">
<area href="classwxPGProperty.htm" alt="wxPGProperty" shape="rect" coords="262,0,427,24">
<area href="classwxCustomPropertyClass.htm" alt="wxCustomPropertyClass" shape="rect" coords="0,112,165,136">
<area href="classwxParentPropertyClass.htm" alt="wxParentPropertyClass" shape="rect" coords="175,112,340,136">
<area href="classwxPGRootPropertyClass.htm" alt="wxPGRootPropertyClass" shape="rect" coords="350,112,515,136">
<area href="classwxPropertyCategoryClass.htm" alt="wxPropertyCategoryClass" shape="rect" coords="525,112,690,136">
</map>
<a href="classwxPGPropertyWithChildren-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#96ebb13382267eb117963341030a5a0c">AddChild</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#326b3c768d99511b0b572f83b4c1c34b">AddChild2</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop, int index=-1, bool correct_mode=true)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f823df743b115386be4d3e7f1412afb1">AppendChoice</a> (const wxString &amp;label, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7327daa9040e986bfb05996c91ca9c98">CanHaveExtraChildren</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#fb945f0822e800822b396cd510c349a5">ChildChanged</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b9dd6cca7b2b8c3b0386f724198e92f8"></a><!-- doxytag: member="wxPGPropertyWithChildren::ClearFlag" ref="b9dd6cca7b2b8c3b0386f724198e92f8" args="(unsigned char flag)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>ClearFlag</b> (unsigned char flag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#137f1b7ea16f1f18fcc3e50ec107da1f">DeleteChoice</a> (int index)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#26f2c9e5945b426fc6188a82893ba8c0">DoGetEditorClass</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxValidator *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9104d087b0a8002df8ca5f1dd01d6a9d">DoGetValidator</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxPGVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#63017cec4d9b14ad30e1939d7f11b46a">DoGetValue</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1aff461e3784961db83ba54428204568"></a><!-- doxytag: member="wxPGPropertyWithChildren::DoSetName" ref="1aff461e3784961db83ba54428204568" args="(const wxString &amp;str)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>DoSetName</b> (const wxString &amp;str)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#fcdb478c660e6a79c03147e8e9483488">DoSetValue</a> (wxPGVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#07f977cb9c08f169a6547ac682b96d5e">Empty</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a364ea566779dba19d54b6988bf2077b">EnsureDataExt</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="882b79a1e9716508360263655f2163dc"></a><!-- doxytag: member="wxPGPropertyWithChildren::FixIndexesOfChildren" ref="882b79a1e9716508360263655f2163dc" args="(size_t starthere=0)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>FixIndexesOfChildren</b> (size_t starthere=0)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="79cb3a797e8b312c47ae91269019a246"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetArrIndex" ref="79cb3a797e8b312c47ae91269019a246" args="() const" -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetArrIndex</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#bc12babaa354fe4ce0fb49af270bba8e">GetAttributes</a> (unsigned int flagmask=0xFFFF)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">size_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#78c30ac3c016f5a165966480aa424cbc">GetChildCount</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#805b98f7d147782079bb9a48915a949f">GetChoiceInfo</a> (wxPGChoiceInfo *choiceinfo)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const <a class="el" href="structwxPGPropertyClassInfo.htm">wxPGPropertyClassInfo</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5070db4077e93e592f26a3a6849dfe80">GetClassInfo</a> () const=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const wxChar *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9ffd50e5a79bb425a8ff50cbadbad499">GetClassName</a> () const=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c38963f074de805e307f1012f385ce43"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetClientData" ref="c38963f074de805e307f1012f385ce43" args="() const" -->
void *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetClientData</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">size_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#117e7e220eda57d3e928c0fc58256fc0">GetCount</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#6e5e5452bc05eeed910725478f2738a5">GetDataExt</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9a872ade3822824469d8a1f4a1257eca"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetDepth" ref="9a872ade3822824469d8a1f4a1257eca" args="() const" -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetDepth</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e31034ab802c9aa8ae3523bc383e3cf9"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetDisplayedString" ref="e31034ab802c9aa8ae3523bc383e3cf9" args="() const" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetDisplayedString</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ecc6e38aaa04bcabc62ed9ecf41f664d"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetEditorClass" ref="ecc6e38aaa04bcabc62ed9ecf41f664d" args="() const" -->
const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetEditorClass</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f17515e0c6d226f76a539753abc2e722"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetFlags" ref="f17515e0c6d226f76a539753abc2e722" args="() const" -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c1e803893ab75218db30f90b3c5fff94">GetGrid</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f52709136e8634375b18780895198792"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetHelpString" ref="f52709136e8634375b18780895198792" args="() const" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetHelpString</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGId.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#af3cbf9dbc89396c4a00c50da365400f">GetId</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxSize&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ba3be53ae3bab7202f901e6df92a0374">GetImageSize</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#006e2c4b775342663a458641d648cac1">GetIndexInParent</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1f03394415395e880376671fce697a9a"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetItemAtY" ref="1f03394415395e880376671fce697a9a" args="(unsigned int y, unsigned int lh)" -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetItemAtY</b> (unsigned int y, unsigned int lh)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#751af48e4efac32e66a605ae637da2c2">GetLabel</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#621dd697a7c71c877708929e1be02a44">GetLastVisibleSubItem</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#fbe4820a3e1afa87d49a32eff6c56f8d">GetMainParent</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fa1a0f2650c2485d1525f7368f0f5da6"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetMaxLength" ref="fa1a0f2650c2485d1525f7368f0f5da6" args="() const" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetMaxLength</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#cafbcfd0f2d84da25e649e2d599660e3">GetName</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#74a4293002b19e38e290575921bc3f1a">GetParent</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">signed char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c4ae046da44fb9b239d828ae0fdf11ca">GetParentingType</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#1e129bcc6c519d54aa99792262514eda">GetParentState</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#2d1f0bea958cd26b90347e09ca5afb4f">GetPropertyByName</a> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const wxChar *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#74873918ca2ecca96c5716310056ac99">GetType</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxValidator *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#135cb0eb4fc184f82de8a08b8d2bb021">GetValidator</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#f6837db08ed7b62b8cd2e0231ea4a40f">GetValueAsString</a> (int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#8cf26071ff1bfb49081258724a95ee25">GetValueAsVariant</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b6cf62ca08bed0f17e1e536f396b1b6b"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetValueImage" ref="b6cf62ca08bed0f17e1e536f396b1b6b" args="() const" -->
wxBitmap *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValueImage</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a419d3409adb781f54aaa1eac077145b">GetValueType</a> () const=0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="dc5856c3cc7766058677e3234dca5301"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetValueTypePtr" ref="dc5856c3cc7766058677e3234dca5301" args="() const" -->
const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValueTypePtr</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#101490b76e22689e502f10304ac02c31">GetY</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="204297a738784f923f766a2c6c0ce0d6"></a><!-- doxytag: member="wxPGPropertyWithChildren::HasFlag" ref="204297a738784f923f766a2c6c0ce0d6" args="(unsigned char flag) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>HasFlag</b> (unsigned char flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c77f444813f8c9af534a87e692c23c23">Hide</a> (bool hide)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#cef596833ec18e0405ce49064c9e501c">Index</a> (const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#be0d0b4e8b177ef6805c74b5c048f593">InsertChoice</a> (const wxString &amp;label, int index, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1f934ed66b0a2f580153da89bad611b8"></a><!-- doxytag: member="wxPGPropertyWithChildren::IsEnabled" ref="1f934ed66b0a2f580153da89bad611b8" args="() const" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsEnabled</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="dfd915f55a6540d062a90e36e7e889f2"></a><!-- doxytag: member="wxPGPropertyWithChildren::IsExpanded" ref="dfd915f55a6540d062a90e36e7e889f2" args="() const" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsExpanded</b> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="99b180841314f6e769189c28592067a2"></a><!-- doxytag: member="wxPGPropertyWithChildren::IsFlagSet" ref="99b180841314f6e769189c28592067a2" args="(unsigned char flag) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsFlagSet</b> (unsigned char flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d4e69c49c82f26946a65d99dbcc6e4a4"></a><!-- doxytag: member="wxPGPropertyWithChildren::IsKindOf" ref="d4e69c49c82f26946a65d99dbcc6e4a4" args="(wxPGPropertyClassInfo &amp;info)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsKindOf</b> (<a class="el" href="structwxPGPropertyClassInfo.htm">wxPGPropertyClassInfo</a> &amp;info)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#06ac28e275378a551b56fe4b047e1e26">IsOk</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3da9bf846e1b80a203a7bf50d36b39b9"></a><!-- doxytag: member="wxPGPropertyWithChildren::IsSomeParent" ref="3da9bf846e1b80a203a7bf50d36b39b9" args="(wxPGProperty *candidate_parent) const" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsSomeParent</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *candidate_parent) const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c7c326b7a1bdc13c3628f24fba460ad5">IsSubProperty</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#a132220293a0a204785ee49f83aee6e4">Item</a> (size_t i) const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#ce0ebcfc3900d2698626303a5316e97a">Last</a> () const</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d0b00df4a3916cb80adfa1227c70baf4">OnCustomPaint</a> (wxDC &amp;dc, const wxRect &amp;rect, <a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;paintdata)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#16fbe26240bf47ab0a9a02d21781da73">OnEvent</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid, wxWindow *wnd_primary, wxEvent &amp;event)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ef152edf3d7bed835de4e324abcdb3fa"></a><!-- doxytag: member="wxPGPropertyWithChildren::PrepareSubProperties" ref="ef152edf3d7bed835de4e324abcdb3fa" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>PrepareSubProperties</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d7221ec4c516aef1a5245f762402b9be">PrepareValueForDialogEditing</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#905f5ca0479004626e7670dbbebf8368">RecreateEditor</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#d638a96f8ab8bcea14056b237a2e3248">RefreshChildren</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="396ca09a6e712efb6375663e46e72c2c"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetAttrib" ref="396ca09a6e712efb6375663e46e72c2c" args="(int id, wxVariant value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetAttrib</b> (int id, wxVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#4cbee393bd7069c1683894a85af4b68f">SetAttribute</a> (int id, wxVariant &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#b84657520f1ef15241e71b8482d30368">SetAttributes</a> (const wxString &amp;attributes)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#8dcb2cb3f13c8d9ad8eeb70336c07d28">SetChoices</a> (const wxArrayString &amp;labels, const wxArrayInt &amp;values=(*((wxArrayInt *) NULL)))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7275467270d2c7ac3f847f4d1b6a1194">SetChoices</a> (<a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;choices)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#613b4866a6b2281bf0382b0d883feb86">SetChoiceSelection</a> (int newValue, const wxPGChoiceInfo &amp;choiceInfo)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d8a812e51f3e63e27ee5212f7b29d71f">SetChoicesExclusive</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a27f45f58bbcd53802e6644db33aec83">SetClientData</a> (void *clientData)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#90294ea6cae6cf504d032b46787bb6e4">SetEditor</a> (const wxString &amp;editorName)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#2cd2e6f0b30a1ab789f9ea8b58226260">SetEditor</a> (const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *editor)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d253bb7cf15a823b79c9152a0c933098"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetFlag" ref="d253bb7cf15a823b79c9152a0c933098" args="(unsigned char flag)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetFlag</b> (unsigned char flag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="839af036b24fc35696f0ef3cb2b0670a"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetHelpString" ref="839af036b24fc35696f0ef3cb2b0670a" args="(const wxString &amp;helpString)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetHelpString</b> (const wxString &amp;helpString)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5acdc1db23a6e219de6619bc54e1a2e3"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetLabel" ref="5acdc1db23a6e219de6619bc54e1a2e3" args="(const wxString &amp;label)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetLabel</b> (const wxString &amp;label)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a74671893440ce2a0f2a0e47ba897ad5">SetMaxLength</a> (int maxLen)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="eeb575d4c2e556866184e5876b9d4ddf"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetParentState" ref="eeb575d4c2e556866184e5876b9d4ddf" args="(wxPropertyGridState *pstate)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetParentState</b> (<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *pstate)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9eb7d1f243c6fb993b3563c241b2ef4a">SetValidator</a> (const wxValidator &amp;validator)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ed06089224f01494563f2192809e5706">SetValueFromInt</a> (long value, int flags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#b5cfed2b0d717e4e3568b0529a9dec77">SetValueFromString</a> (const wxString &amp;text, int flags)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5c5be1292d329945b0a24e33db485207">SetValueImage</a> (wxBitmap &amp;bmp)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="40a1d30293c87d936a2ad27e9bd75cca"></a><!-- doxytag: member="wxPGPropertyWithChildren::ShowError" ref="40a1d30293c87d936a2ad27e9bd75cca" args="(const wxString &amp;msg)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>ShowError</b> (const wxString &amp;msg)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="dcb03b7d4122415c2c5a5006e14a09e0"></a><!-- doxytag: member="wxPGPropertyWithChildren::StdValidationProcedure" ref="dcb03b7d4122415c2c5a5006e14a09e0" args="(wxPGVariant value)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>StdValidationProcedure</b> (wxPGVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e1df00dab680f38e91287ff7d2c37679"></a><!-- doxytag: member="wxPGPropertyWithChildren::SubPropsChanged" ref="e1df00dab680f38e91287ff7d2c37679" args="(int oldSelInd=-1)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SubPropsChanged</b> (int oldSelInd=-1)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3166cf5d6e39a8c5891e3163ed193bd1"></a><!-- doxytag: member="wxPGPropertyWithChildren::UpdateControl" ref="3166cf5d6e39a8c5891e3163ed193bd1" args="(wxWindow *primary)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>UpdateControl</b> (wxWindow *primary)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#39fc1d63dedee288560f8b4da4b157eb">wxPGPropertyWithChildren</a> (const wxString &amp;label, const wxString &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#802b151dbc6440f32a20912b7ad8730f">wxPGPropertyWithChildren</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGPropertyWithChildren.htm#765741a025b6d1bf99ea573d727d8c7e">~wxPGPropertyWithChildren</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="09e06b449e7a2319d5b6ebf234d9d913"></a><!-- doxytag: member="wxPGPropertyWithChildren::Init" ref="09e06b449e7a2319d5b6ebf234d9d913" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>Init</b> ()</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="84c993bb166b82ab7fac4b4b2c5c4d19"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_arrIndex" ref="84c993bb166b82ab7fac4b4b2c5c4d19" args="" -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_arrIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="bf9fef30bb9fbd387aa634a7a7ab70ba"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_bgColIndex" ref="bf9fef30bb9fbd387aa634a7a7ab70ba" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_bgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7c5bb1d6f916da62aac58a3a311e8f6c"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_children" ref="7c5bb1d6f916da62aac58a3a311e8f6c" args="" -->
wxPGArrayProperty&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_children</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="093e5515221abf705473e77897b5590c"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_clientData" ref="093e5515221abf705473e77897b5590c" args="" -->
void *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_clientData</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fee9dac605393d9ee26245753b77ddcb"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_dataExt" ref="fee9dac605393d9ee26245753b77ddcb" args="" -->
<a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_dataExt</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="06ab2c180ea47e4826314dc34227fa2a"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_depth" ref="06ab2c180ea47e4826314dc34227fa2a" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_depth</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4e7b596662266dafed249a29278db385"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_depthBgCol" ref="4e7b596662266dafed249a29278db385" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_depthBgCol</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="16c94718b3ad630b42c96c471a2e3155"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_expanded" ref="16c94718b3ad630b42c96c471a2e3155" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_expanded</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1ecd12a864fdaa348c4af27d2f749848"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_fgColIndex" ref="1ecd12a864fdaa348c4af27d2f749848" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_fgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c7b22970cee5c32fd12ca0a2603b637a"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_flags" ref="c7b22970cee5c32fd12ca0a2603b637a" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_flags</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3e0236d1ce44618abaf8420091fcd3b6"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_label" ref="3e0236d1ce44618abaf8420091fcd3b6" args="" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_label</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0a26eaa0fb2f3b1b777e5c55f3b2a08a"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_maxLen" ref="0a26eaa0fb2f3b1b777e5c55f3b2a08a" args="" -->
short&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_maxLen</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e0567605bf703d69601ff731ab0e82f6"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_name" ref="e0567605bf703d69601ff731ab0e82f6" args="" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_name</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="32cad241d50a5108bc352269226a5ce1"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_parent" ref="32cad241d50a5108bc352269226a5ce1" args="" -->
<a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_parent</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0a585b635c9a38b055782c9c673ee7c9"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_parentingType" ref="0a585b635c9a38b055782c9c673ee7c9" args="" -->
signed char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_parentingType</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="26df4d350fd35585130d72d279a0c2c6"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_parentState" ref="26df4d350fd35585130d72d279a0c2c6" args="" -->
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_parentState</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1906d0b38e1318308b82e3a51a185a38"></a><!-- doxytag: member="wxPGPropertyWithChildren::m_y" ref="1906d0b38e1318308b82e3a51a185a38" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_y</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a>, alias <a class="el" href="classwxParentPropertyClass.htm">wxParentPropertyClass</a>, is a base class for new properties that have sub-properties. 
<p>
For example, wxFontProperty and wxFlagsProperty descend from this class. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="802b151dbc6440f32a20912b7ad8730f"></a><!-- doxytag: member="wxPGPropertyWithChildren::wxPGPropertyWithChildren" ref="802b151dbc6440f32a20912b7ad8730f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPGPropertyWithChildren::wxPGPropertyWithChildren           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Special constructor only used in special cases. 
<p>

</div>
</div><p>
<a class="anchor" name="39fc1d63dedee288560f8b4da4b157eb"></a><!-- doxytag: member="wxPGPropertyWithChildren::wxPGPropertyWithChildren" ref="39fc1d63dedee288560f8b4da4b157eb" args="(const wxString &amp;label, const wxString &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPGPropertyWithChildren::wxPGPropertyWithChildren           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
When new class is derived, call this constructor. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>label</em>&nbsp;</td><td>Label for the property. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="765741a025b6d1bf99ea573d727d8c7e"></a><!-- doxytag: member="wxPGPropertyWithChildren::~wxPGPropertyWithChildren" ref="765741a025b6d1bf99ea573d727d8c7e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxPGPropertyWithChildren::~wxPGPropertyWithChildren           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="96ebb13382267eb117963341030a5a0c"></a><!-- doxytag: member="wxPGPropertyWithChildren::AddChild" ref="96ebb13382267eb117963341030a5a0c" args="(wxPGProperty *prop)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGPropertyWithChildren::AddChild           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>prop</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This is used by properties that have fixed sub-properties. 
<p>

</div>
</div><p>
<a class="anchor" name="326b3c768d99511b0b572f83b4c1c34b"></a><!-- doxytag: member="wxPGPropertyWithChildren::AddChild2" ref="326b3c768d99511b0b572f83b4c1c34b" args="(wxPGProperty *prop, int index=-1, bool correct_mode=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGPropertyWithChildren::AddChild2           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>prop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em> = <code>-1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>correct_mode</em> = <code>true</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This is used by Insert etc. 
<p>

</div>
</div><p>
<a class="anchor" name="f823df743b115386be4d3e7f1412afb1"></a><!-- doxytag: member="wxPGPropertyWithChildren::AppendChoice" ref="f823df743b115386be4d3e7f1412afb1" args="(const wxString &amp;label, int value=INT_MAX)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::AppendChoice           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em> = <code>INT_MAX</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added. 
</div>
</div><p>
<a class="anchor" name="7327daa9040e986bfb05996c91ca9c98"></a><!-- doxytag: member="wxPGPropertyWithChildren::CanHaveExtraChildren" ref="7327daa9040e986bfb05996c91ca9c98" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::CanHaveExtraChildren           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if extra children can be added for this property (i.e. 
<p>
it is wxPropertyCategory or wxCustomProperty) 
</div>
</div><p>
<a class="anchor" name="fb945f0822e800822b396cd510c349a5"></a><!-- doxytag: member="wxPGPropertyWithChildren::ChildChanged" ref="fb945f0822e800822b396cd510c349a5" args="(wxPGProperty *p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGPropertyWithChildren::ChildChanged           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>p</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Called after child property p has been altered. 
<p>
The value of this parent property should now be updated accordingly. 
<p>
Reimplemented in <a class="el" href="classwxParentPropertyClass.htm#8e1a78eb9aad312f664b80756be549a6">wxParentPropertyClass</a>.
</div>
</div><p>
<a class="anchor" name="137f1b7ea16f1f18fcc3e50ec107da1f"></a><!-- doxytag: member="wxPGPropertyWithChildren::DeleteChoice" ref="137f1b7ea16f1f18fcc3e50ec107da1f" args="(int index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::DeleteChoice           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Removes entry from property's <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> and editor control (if it is active). 
<p>
If selected item is deleted, then the value is set to unspecified. 
</div>
</div><p>
<a class="anchor" name="26f2c9e5945b426fc6188a82893ba8c0"></a><!-- doxytag: member="wxPGPropertyWithChildren::DoGetEditorClass" ref="26f2c9e5945b426fc6188a82893ba8c0" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPGProperty::DoGetEditorClass           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns pointer to an instance of editor class. 
<p>

<p>
Reimplemented in <a class="el" href="classwxPGRootPropertyClass.htm#8b6e91fd97c90e7477081f475045076b">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#0934004c8b9b6bf7479a78bc539a33fd">wxPropertyCategoryClass</a>.
</div>
</div><p>
<a class="anchor" name="9104d087b0a8002df8ca5f1dd01d6a9d"></a><!-- doxytag: member="wxPGPropertyWithChildren::DoGetValidator" ref="9104d087b0a8002df8ca5f1dd01d6a9d" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxValidator* wxPGProperty::DoGetValidator           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns pointer to the wxValidator that should be used with the editor of this property (NULL for no validator). 
<p>
Setting validator explicitly via SetPropertyValidator will override this.<p>
In most situations, code like this should work well (macros are used to maintain one actual validator instance, so on the second call the function exits within the first macro):<p>
<div class="fragment"><pre class="fragment">        wxValidator* wxMyPropertyClass::DoGetValidator ()<span class="keyword"> const</span>
<span class="keyword">        </span>{
            WX_PG_DOGETVALIDATOR_ENTRY()

            wxMyValidator* validator = new wxMyValidator(...);

            ... prepare validator...

            WX_PG_DOGETVALIDATOR_EXIT(validator)
        }
</pre></div><p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>You can get common filename validator by returning wxFilePropertyClass::GetClassValidator(). wxDirProperty, for example, uses it. </dd></dl>

</div>
</div><p>
<a class="anchor" name="63017cec4d9b14ad30e1939d7f11b46a"></a><!-- doxytag: member="wxPGPropertyWithChildren::DoGetValue" ref="63017cec4d9b14ad30e1939d7f11b46a" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxPGVariant wxPGProperty::DoGetValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns properly constructed wxPGVariant. 
<p>

<p>
Reimplemented in <a class="el" href="classwxParentPropertyClass.htm#53423eb75eacdab84ba0f70caed10264">wxParentPropertyClass</a>, and <a class="el" href="classwxCustomPropertyClass.htm#c357ea7fb71e4ab4dd91f26b3be8d861">wxCustomPropertyClass</a>.
</div>
</div><p>
<a class="anchor" name="fcdb478c660e6a79c03147e8e9483488"></a><!-- doxytag: member="wxPGPropertyWithChildren::DoSetValue" ref="fcdb478c660e6a79c03147e8e9483488" args="(wxPGVariant value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::DoSetValue           </td>
          <td>(</td>
          <td class="paramtype">wxPGVariant&nbsp;</td>
          <td class="paramname"> <em>value</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets property's internal value. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Simple container with GetString(), GetLong() etc. methods. Currently recommended means to extract value is to use wxPGVariantToXXX(value) macro. </td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Example pseudo-implementation with comments: <div class="fragment"><pre class="fragment">        <span class="keywordtype">void</span> wxMyProperty::DoSetValue ( wxPGVariant value )
        {
            <span class="comment">// A) Get value. For example</span>
            <span class="keyword">const</span> wxMyValueType* pvalue = wxPGVariantToWxObjectPtr(value,wxMyValueType);
            <span class="comment">//    or:</span>
            <span class="keyword">const</span> wxString&amp; str = wxPGVariantToString(value);
            <span class="comment">//    or:</span>
            <span class="keywordtype">long</span> val = wxPGVariantToLong(value);

            <span class="comment">// B) If value is wxObject or void based with NULL default, then handle that:</span>
            <span class="keywordflow">if</span> ( pvalue )
                m_value = *pvalue;
            <span class="keywordflow">else</span>
                pmyvalue-&gt;SetToDefault();

            <span class="comment">// Otherwise</span>
            <span class="comment">// m_value = *pvalue;</span>
            <span class="comment">// is sufficient.</span>

            <span class="comment">// C) If has children, this should be here (before displaying in control).</span>
            RefreshChildren();

        }
</pre></div> </dd></dl>

<p>
Reimplemented in <a class="el" href="classwxParentPropertyClass.htm#646e62d5bf16b5abc80bca1709151094">wxParentPropertyClass</a>, and <a class="el" href="classwxCustomPropertyClass.htm#f7483a1467d1e20f3693b85e5c261872">wxCustomPropertyClass</a>.
</div>
</div><p>
<a class="anchor" name="07f977cb9c08f169a6547ac682b96d5e"></a><!-- doxytag: member="wxPGPropertyWithChildren::Empty" ref="07f977cb9c08f169a6547ac682b96d5e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGPropertyWithChildren::Empty           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Deletes all sub-properties. 
<p>

</div>
</div><p>
<a class="anchor" name="a364ea566779dba19d54b6988bf2077b"></a><!-- doxytag: member="wxPGPropertyWithChildren::EnsureDataExt" ref="a364ea566779dba19d54b6988bf2077b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::EnsureDataExt           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If property did not have data extension, one is created now (returns true in that case). 
<p>

</div>
</div><p>
<a class="anchor" name="bc12babaa354fe4ce0fb49af270bba8e"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetAttributes" ref="bc12babaa354fe4ce0fb49af270bba8e" args="(unsigned int flagmask=0xFFFF)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPGProperty::GetAttributes           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>flagmask</em> = <code>0xFFFF</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns comma-delimited string of property attributes. 
<p>

</div>
</div><p>
<a class="anchor" name="78c30ac3c016f5a165966480aa424cbc"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetChildCount" ref="78c30ac3c016f5a165966480aa424cbc" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t wxPGProperty::GetChildCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns number of children (always 0 for normal properties). 
<p>

</div>
</div><p>
<a class="anchor" name="805b98f7d147782079bb9a48915a949f"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetChoiceInfo" ref="805b98f7d147782079bb9a48915a949f" args="(wxPGChoiceInfo *choiceinfo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int wxPGProperty::GetChoiceInfo           </td>
          <td>(</td>
          <td class="paramtype">wxPGChoiceInfo *&nbsp;</td>
          <td class="paramname"> <em>choiceinfo</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns current value's index to the choice control. 
<p>
May also return, through pointer arguments, strings that should be inserted to that control. Irrelevant to classes which do not employ wxPG_EDITOR(Choice) or similar. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If returns -1 in choiceinfo-&gt;m_itemCount, then in that case this class be derived from wxBaseEnumPropertyClass (see propdev.h) and GetEntry is used to fill an array (slower, but handier if you don't store your labels as arrays of strings).</li><li>Must not crash even if property's set of choices is uninitialized (i.e. it points to wxPGGlobalVars-&gt;m_emptyConstants). </li></ul>
</dd></dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#72712b986ce986cabcf5e31fbccbe78b">wxCustomPropertyClass</a>.
</div>
</div><p>
<a class="anchor" name="5070db4077e93e592f26a3a6849dfe80"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetClassInfo" ref="5070db4077e93e592f26a3a6849dfe80" args="() const=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="structwxPGPropertyClassInfo.htm">wxPGPropertyClassInfo</a>* wxPGProperty::GetClassInfo           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [pure virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns classinfo of the property class. 
<p>

<p>
Implemented in <a class="el" href="classwxPGRootPropertyClass.htm#592b3e940c07b818f5ca046a3be4de90">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#20536d8a3c0bd9b9f7e3bab2517f27da">wxPropertyCategoryClass</a>.
</div>
</div><p>
<a class="anchor" name="9ffd50e5a79bb425a8ff50cbadbad499"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetClassName" ref="9ffd50e5a79bb425a8ff50cbadbad499" args="() const=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const wxChar* wxPGProperty::GetClassName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [pure virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns classname (for example, "wxStringProperty" for wxStringProperty) of a property class. 
<p>

<p>
Implemented in <a class="el" href="classwxPGRootPropertyClass.htm#d7e186f7c11140a851b8f25112bdc92e">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#3b01173c1793d25485f401f8389cf24e">wxPropertyCategoryClass</a>.
</div>
</div><p>
<a class="anchor" name="117e7e220eda57d3e928c0fc58256fc0"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetCount" ref="117e7e220eda57d3e928c0fc58256fc0" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t wxPGPropertyWithChildren::GetCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns number of sub-properties. 
<p>

</div>
</div><p>
<a class="anchor" name="6e5e5452bc05eeed910725478f2738a5"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetDataExt" ref="6e5e5452bc05eeed910725478f2738a5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a>* wxPGProperty::GetDataExt           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property's data extension (NULL if none). 
<p>

</div>
</div><p>
<a class="anchor" name="c1e803893ab75218db30f90b3c5fff94"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetGrid" ref="c1e803893ab75218db30f90b3c5fff94" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> * wxPGProperty::GetGrid           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property grid where property lies. 
<p>

</div>
</div><p>
<a class="anchor" name="af3cbf9dbc89396c4a00c50da365400f"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetId" ref="af3cbf9dbc89396c4a00c50da365400f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGId.htm">wxPGId</a> wxPGProperty::GetId           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property id. 
<p>

</div>
</div><p>
<a class="anchor" name="ba3be53ae3bab7202f901e6df92a0374"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetImageSize" ref="ba3be53ae3bab7202f901e6df92a0374" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxSize wxPGProperty::GetImageSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns size of the custom painted image in front of property. 
<p>
This method must be overridden to return non-default value if OnCustomPaint is to be called. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If flexible image size is desired, return <a class="el" href="group__miscellaneous.htm#g8184f6475a4dd37b52937c8a5035caf4">wxPG_FLEXIBLE_SIZE(wid,hei)</a>. OnCustomPaint is then called to measure items as well (see for <a class="el" href="classwxPGProperty.htm#d0b00df4a3916cb80adfa1227c70baf4">wxPGProperty::OnCustomPaint</a> for measure call specs).</li><li>If entire property, including text, is to be custom painted, then <a class="el" href="group__miscellaneous.htm#gf75be79cbd217ac47e1713c3a92ba25b">wxPG_FULL_CUSTOM_PAINT_SIZE(hei)</a> or <a class="el" href="group__miscellaneous.htm#g9d35084589d5aee5cfdf36d56f368c4e">wxPG_FULL_CUSTOM_PAINT_FLEXIBLE_SIZE(hei)</a> is to be returned.</li><li>Default behaviour is to return wxSize(0,0), which means no image.</li><li>Default image width or height is indicated with dimension -1. </li></ul>
</dd></dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#6b30c759c8ee2312c1973598c3f856b1">wxCustomPropertyClass</a>.
</div>
</div><p>
<a class="anchor" name="006e2c4b775342663a458641d648cac1"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetIndexInParent" ref="006e2c4b775342663a458641d648cac1" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int wxPGProperty::GetIndexInParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns position in parent's array. 
<p>

</div>
</div><p>
<a class="anchor" name="751af48e4efac32e66a605ae637da2c2"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetLabel" ref="751af48e4efac32e66a605ae637da2c2" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxString&amp; wxPGProperty::GetLabel           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property's label. 
<p>

</div>
</div><p>
<a class="anchor" name="621dd697a7c71c877708929e1be02a44"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetLastVisibleSubItem" ref="621dd697a7c71c877708929e1be02a44" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetLastVisibleSubItem           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns last visible sub-property, recursively. 
<p>

</div>
</div><p>
<a class="anchor" name="fbe4820a3e1afa87d49a32eff6c56f8d"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetMainParent" ref="fbe4820a3e1afa87d49a32eff6c56f8d" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetMainParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns highest level non-category, non-root parent. 
<p>
Useful when you have nested wxCustomProperties/wxParentProperties. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Thus, if immediate parent is root or category, this will return the property itself. </dd></dl>

</div>
</div><p>
<a class="anchor" name="cafbcfd0f2d84da25e649e2d599660e3"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetName" ref="cafbcfd0f2d84da25e649e2d599660e3" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxString&amp; wxPGProperty::GetName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property's name (alternate way to access property). 
<p>

</div>
</div><p>
<a class="anchor" name="74a4293002b19e38e290575921bc3f1a"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetParent" ref="74a4293002b19e38e290575921bc3f1a" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a>* wxPGProperty::GetParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return parent of property. 
<p>

</div>
</div><p>
<a class="anchor" name="c4ae046da44fb9b239d828ae0fdf11ca"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetParentingType" ref="c4ae046da44fb9b239d828ae0fdf11ca" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">signed char wxPGProperty::GetParentingType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns 0 for normal items. 
<p>
1 for categories, -1 for other properties with children, -2 for wxCustomProperty (mostly like -1 ones but with few expections). <dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Should not be overridden by new custom properties. Usually only used internally. </dd></dl>

</div>
</div><p>
<a class="anchor" name="1e129bcc6c519d54aa99792262514eda"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetParentState" ref="1e129bcc6c519d54aa99792262514eda" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a>* wxPGPropertyWithChildren::GetParentState           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> to which this property belongs. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm#e11e17d7082581495b4f3bddee4867f1">wxPGProperty</a>.
</div>
</div><p>
<a class="anchor" name="2d1f0bea958cd26b90347e09ca5afb4f"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetPropertyByName" ref="2d1f0bea958cd26b90347e09ca5afb4f" args="(const wxString &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGPropertyWithChildren::GetPropertyByName           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns (direct) child property with given name (or NULL if not found). 
<p>

</div>
</div><p>
<a class="anchor" name="74873918ca2ecca96c5716310056ac99"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetType" ref="74873918ca2ecca96c5716310056ac99" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxChar* wxPGProperty::GetType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns type name of property that is compatible with CreatePropertyByType. 
<p>
and wxVariant::GetType. 
</div>
</div><p>
<a class="anchor" name="135cb0eb4fc184f82de8a08b8d2bb021"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetValidator" ref="135cb0eb4fc184f82de8a08b8d2bb021" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxValidator* wxPGProperty::GetValidator           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Gets assignable version of property's validator. 
<p>

</div>
</div><p>
<a class="anchor" name="f6837db08ed7b62b8cd2e0231ea4a40f"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetValueAsString" ref="f6837db08ed7b62b8cd2e0231ea4a40f" args="(int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxString wxPGPropertyWithChildren::GetValueAsString           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Advanced variant of <a class="el" href="classwxPGPropertyWithChildren.htm#f6837db08ed7b62b8cd2e0231ea4a40f">GetValueAsString()</a> that forms a string that contains sequence of text representations of sub-properties. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm#29f70a60e4844efbebc140270e1a4358">wxPGProperty</a>.
<p>
Reimplemented in <a class="el" href="classwxParentPropertyClass.htm#c142e13fce14f1c5d0a8ec370e99eb41">wxParentPropertyClass</a>, <a class="el" href="classwxCustomPropertyClass.htm#0f95a084e805e711f920182e0ae94686">wxCustomPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#290e3cc9684e9109bbd2c7384289ad4b">wxPropertyCategoryClass</a>.
</div>
</div><p>
<a class="anchor" name="8cf26071ff1bfb49081258724a95ee25"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetValueAsVariant" ref="8cf26071ff1bfb49081258724a95ee25" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxVariant wxPGProperty::GetValueAsVariant           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns value as wxVariant. 
<p>

</div>
</div><p>
<a class="anchor" name="a419d3409adb781f54aaa1eac077145b"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetValueType" ref="a419d3409adb781f54aaa1eac077145b" args="() const=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a>* wxPGProperty::GetValueType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [pure virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns pointer to the object that has methods related to the value type of this property. 
<p>
Keep atleast this method abstract so the class is kept abstract. 
<p>
Implemented in <a class="el" href="classwxPGRootPropertyClass.htm#a8b87a1398a93b10d420fc88045ab253">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#90571fd7aeb0f07f2df32ca401050ac7">wxPropertyCategoryClass</a>.
</div>
</div><p>
<a class="anchor" name="101490b76e22689e502f10304ac02c31"></a><!-- doxytag: member="wxPGPropertyWithChildren::GetY" ref="101490b76e22689e502f10304ac02c31" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::GetY           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Gets pre-calculated top y coordinate of property graphics. 
<p>
This cannot be relied on all times (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> knows when :) ), and value is -1 if property is not visible. 
</div>
</div><p>
<a class="anchor" name="c77f444813f8c9af534a87e692c23c23"></a><!-- doxytag: member="wxPGPropertyWithChildren::Hide" ref="c77f444813f8c9af534a87e692c23c23" args="(bool hide)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::Hide           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>hide</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Hides or reveals the property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>hide</em>&nbsp;</td><td>true for hide, false for reveal. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="cef596833ec18e0405ce49064c9e501c"></a><!-- doxytag: member="wxPGPropertyWithChildren::Index" ref="cef596833ec18e0405ce49064c9e501c" args="(const wxPGProperty *p) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGPropertyWithChildren::Index           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>p</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns index of given sub-property. 
<p>

</div>
</div><p>
<a class="anchor" name="be0d0b4e8b177ef6805c74b5c048f593"></a><!-- doxytag: member="wxPGPropertyWithChildren::InsertChoice" ref="be0d0b4e8b177ef6805c74b5c048f593" args="(const wxString &amp;label, int index, int value=INT_MAX)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::InsertChoice           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em> = <code>INT_MAX</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added. 
</div>
</div><p>
<a class="anchor" name="06ac28e275378a551b56fe4b047e1e26"></a><!-- doxytag: member="wxPGPropertyWithChildren::IsOk" ref="06ac28e275378a551b56fe4b047e1e26" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::IsOk           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if property is valid and <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> methods can operate on it safely. 
<p>

</div>
</div><p>
<a class="anchor" name="c7c326b7a1bdc13c3628f24fba460ad5"></a><!-- doxytag: member="wxPGPropertyWithChildren::IsSubProperty" ref="c7c326b7a1bdc13c3628f24fba460ad5" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::IsSubProperty           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if this is a sub-property. 
<p>

</div>
</div><p>
<a class="anchor" name="a132220293a0a204785ee49f83aee6e4"></a><!-- doxytag: member="wxPGPropertyWithChildren::Item" ref="a132220293a0a204785ee49f83aee6e4" args="(size_t i) const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGPropertyWithChildren::Item           </td>
          <td>(</td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns sub-property at index i. 
<p>

</div>
</div><p>
<a class="anchor" name="ce0ebcfc3900d2698626303a5316e97a"></a><!-- doxytag: member="wxPGPropertyWithChildren::Last" ref="ce0ebcfc3900d2698626303a5316e97a" args="() const" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGPropertyWithChildren::Last           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns last sub-property. 
<p>

</div>
</div><p>
<a class="anchor" name="d0b00df4a3916cb80adfa1227c70baf4"></a><!-- doxytag: member="wxPGPropertyWithChildren::OnCustomPaint" ref="d0b00df4a3916cb80adfa1227c70baf4" args="(wxDC &amp;dc, const wxRect &amp;rect, wxPGPaintData &amp;paintdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::OnCustomPaint           </td>
          <td>(</td>
          <td class="paramtype">wxDC &amp;&nbsp;</td>
          <td class="paramname"> <em>dc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxRect &amp;&nbsp;</td>
          <td class="paramname"> <em>rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>paintdata</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Override to paint an image in front of the property value text or drop-down list item (but only if <a class="el" href="classwxPGProperty.htm#ba3be53ae3bab7202f901e6df92a0374">wxPGProperty::GetImageSize</a> is overridden as well). 
<p>
If property's <a class="el" href="classwxPGProperty.htm#ba3be53ae3bab7202f901e6df92a0374">GetImageSize()</a> returns size that has height != 0 but less than row height ( &lt; 0 has special meanings), <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> calls this method to draw a custom image in a limited area in front of the editor control or value text/graphics, and if control has drop-down list, then the image is drawn there as well (even in the case <a class="el" href="classwxPGProperty.htm#ba3be53ae3bab7202f901e6df92a0374">GetImageSize()</a> returned higher height than row height).<p>
NOTE: Following applies when <a class="el" href="classwxPGProperty.htm#ba3be53ae3bab7202f901e6df92a0374">GetImageSize()</a> returns a "flexible" height ( using <a class="el" href="group__miscellaneous.htm#g8184f6475a4dd37b52937c8a5035caf4">wxPG_FLEXIBLE_SIZE(W,H)</a> macro), which implies variable height items: If rect.x is &lt; 0, then this is a measure item call, which means that dc is invalid and only thing that should be done is to set paintdata.m_drawnHeight to the height of the image of item at index paintdata.m_choiceItem. This call may be done even as often as once every drop-down popup show.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>dc</em>&nbsp;</td><td>wxDC to paint on. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rect</em>&nbsp;</td><td>Box reserved for custom graphics. Includes surrounding rectangle, if any. If x is &lt; 0, then this is a measure item call (see above). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>paintdata</em>&nbsp;</td><td><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> structure with much useful data.</td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>You can actually exceed rect width, but if you do so then paintdata.m_drawnWidth must be set to the full width drawn in pixels.</li><li>Due to technical reasons, rect's height will be default even if custom height was reported during measure call.</li><li>Changing font and text colour affects the text drawn next to the painted image (which is done immediately after the OnCustomPaint call finishes).</li><li>Brush is guaranteed to be default background colour. It has been already used to clear the background of area being painted. It can be modified.</li><li>Pen is guaranteed to be 1-wide 'black' (or whatever is the proper colour) pen for drawing framing rectangle. It can be changed as well. </li></ul>
</dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#29f70a60e4844efbebc140270e1a4358">GetValueAsString</a> </dd></dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#1b88d706bcd4ada3839401e25a98ed2e">wxCustomPropertyClass</a>.
</div>
</div><p>
<a class="anchor" name="16fbe26240bf47ab0a9a02d21781da73"></a><!-- doxytag: member="wxPGPropertyWithChildren::OnEvent" ref="16fbe26240bf47ab0a9a02d21781da73" args="(wxPropertyGrid *propgrid, wxWindow *wnd_primary, wxEvent &amp;event)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::OnEvent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="paramname"> <em>propgrid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>wnd_primary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxEvent &amp;&nbsp;</td>
          <td class="paramname"> <em>event</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Events received by editor widgets are processed here. 
<p>
Note that editor class usually processes most events. Some, such as button press events of TextCtrlAndButton class, should be handled here. Also, if custom handling for regular events is desired, then that can also be done (for example, wxSystemColourProperty custom handles wxEVT_COMMAND_CHOICE_SELECTED). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>event</em>&nbsp;</td><td>Associated wxEvent. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Should</em>&nbsp;</td><td>return true if any changes in value should be reported. This is case, for example, when enter is pressed in wxTextCtrl. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="d7221ec4c516aef1a5245f762402b9be"></a><!-- doxytag: member="wxPGPropertyWithChildren::PrepareValueForDialogEditing" ref="d7221ec4c516aef1a5245f762402b9be" args="(wxPropertyGrid *propgrid)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::PrepareValueForDialogEditing           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="paramname"> <em>propgrid</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Updates property value in case there were last minute changes. 
<p>
If value was unspecified, it will be set to default. Use only for properties that have TextCtrl-based editor. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd>If you have code similar to <div class="fragment"><pre class="fragment">            <span class="comment">// Update the value in case of last minute changes</span>
            <span class="keywordflow">if</span> ( primary &amp;&amp; propgrid-&gt;IsEditorsValueModified() )
                 GetEditorClass()-&gt;<a class="code" href="classwxPGEditor.htm#37d5e2324cf9dabd50cf485933d696d6">CopyValueFromControl</a>( <span class="keyword">this</span>, primary );
</pre></div> in <a class="el" href="classwxPGProperty.htm#16fbe26240bf47ab0a9a02d21781da73">wxPGProperty::OnEvent</a> wxEVT_COMMAND_BUTTON_CLICKED handler, then replace it with call to this method. </dd></dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>True</em>&nbsp;</td><td>if value changed. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="905f5ca0479004626e7670dbbebf8368"></a><!-- doxytag: member="wxPGPropertyWithChildren::RecreateEditor" ref="905f5ca0479004626e7670dbbebf8368" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::RecreateEditor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If property's editor is created this forces its recreation. 
<p>
Useful in SetAttribute etc. Returns true if actually did anything. 
</div>
</div><p>
<a class="anchor" name="d638a96f8ab8bcea14056b237a2e3248"></a><!-- doxytag: member="wxPGPropertyWithChildren::RefreshChildren" ref="d638a96f8ab8bcea14056b237a2e3248" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGPropertyWithChildren::RefreshChildren           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Refresh values of child properties. 
<p>

</div>
</div><p>
<a class="anchor" name="4cbee393bd7069c1683894a85af4b68f"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetAttribute" ref="4cbee393bd7069c1683894a85af4b68f" args="(int id, wxVariant &amp;value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::SetAttribute           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets an attribute of this property. 
<p>
This is quite property class specific, and there are no common attributes. Note that attribute may be specific to a property instance, or it may affect all properties of its class. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>id</em>&nbsp;</td><td>Identifier of attribute </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Value for that attribute. </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#7d3f3abc22871a1be40b834da5fc58bc">wxCustomPropertyClass</a>.
</div>
</div><p>
<a class="anchor" name="b84657520f1ef15241e71b8482d30368"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetAttributes" ref="b84657520f1ef15241e71b8482d30368" args="(const wxString &amp;attributes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetAttributes           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>attributes</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets attributes from a comma-delimited string. 
<p>

</div>
</div><p>
<a class="anchor" name="8dcb2cb3f13c8d9ad8eeb70336c07d28"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetChoices" ref="8dcb2cb3f13c8d9ad8eeb70336c07d28" args="(const wxArrayString &amp;labels, const wxArrayInt &amp;values=(*((wxArrayInt *) NULL)))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::SetChoices           </td>
          <td>(</td>
          <td class="paramtype">const wxArrayString &amp;&nbsp;</td>
          <td class="paramname"> <em>labels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxArrayInt &amp;&nbsp;</td>
          <td class="paramname"> <em>values</em> = <code>(*((wxArrayInt&nbsp;*)&nbsp;NULL))</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets new set of choices for property. 
<p>

</div>
</div><p>
<a class="anchor" name="7275467270d2c7ac3f847f4d1b6a1194"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetChoices" ref="7275467270d2c7ac3f847f4d1b6a1194" args="(wxPGChoices &amp;choices)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::SetChoices           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>choices</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets new set of choices for property. 
<p>

</div>
</div><p>
<a class="anchor" name="613b4866a6b2281bf0382b0d883feb86"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetChoiceSelection" ref="613b4866a6b2281bf0382b0d883feb86" args="(int newValue, const wxPGChoiceInfo &amp;choiceInfo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetChoiceSelection           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>newValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxPGChoiceInfo &amp;&nbsp;</td>
          <td class="paramname"> <em>choiceInfo</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Changes value of a property with choices, but only works if the value type is long or string. 
<p>

</div>
</div><p>
<a class="anchor" name="d8a812e51f3e63e27ee5212f7b29d71f"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetChoicesExclusive" ref="d8a812e51f3e63e27ee5212f7b29d71f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetChoicesExclusive           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If property has choices and they are not yet exclusive, new such copy of them will be created. 
<p>

</div>
</div><p>
<a class="anchor" name="a27f45f58bbcd53802e6644db33aec83"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetClientData" ref="a27f45f58bbcd53802e6644db33aec83" args="(void *clientData)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetClientData           </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>clientData</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets client data (void*) of a property. 
<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>This untyped client data has to be deleted manually. </dd></dl>

</div>
</div><p>
<a class="anchor" name="90294ea6cae6cf504d032b46787bb6e4"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetEditor" ref="90294ea6cae6cf504d032b46787bb6e4" args="(const wxString &amp;editorName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetEditor           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>editorName</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets editor for a property. 
<p>

</div>
</div><p>
<a class="anchor" name="2cd2e6f0b30a1ab789f9ea8b58226260"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetEditor" ref="2cd2e6f0b30a1ab789f9ea8b58226260" args="(const wxPGEditor *editor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetEditor           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td>
          <td class="paramname"> <em>editor</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets editor for a property. 
<p>

</div>
</div><p>
<a class="anchor" name="a74671893440ce2a0f2a0e47ba897ad5"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetMaxLength" ref="a74671893440ce2a0f2a0e47ba897ad5" args="(int maxLen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::SetMaxLength           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>maxLen</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set max length of text editor. 
<p>

</div>
</div><p>
<a class="anchor" name="9eb7d1f243c6fb993b3563c241b2ef4a"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetValidator" ref="9eb7d1f243c6fb993b3563c241b2ef4a" args="(const wxValidator &amp;validator)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetValidator           </td>
          <td>(</td>
          <td class="paramtype">const wxValidator &amp;&nbsp;</td>
          <td class="paramname"> <em>validator</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets wxValidator for a property. 
<p>

</div>
</div><p>
<a class="anchor" name="ed06089224f01494563f2192809e5706"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetValueFromInt" ref="ed06089224f01494563f2192809e5706" args="(long value, int flags=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::SetValueFromInt           </td>
          <td>(</td>
          <td class="paramtype">long&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Converts integer to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#fcdb478c660e6a79c03147e8e9483488">DoSetValue()</a> on it. 
<p>
Default behaviour is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Int to get the value from. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>If has wxPG_FULL_VALUE, then the value given is a actual value and not an index. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>true</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#8e6e83deaef38b7f1fb54dc4fb0b80ca">wxCustomPropertyClass</a>.
</div>
</div><p>
<a class="anchor" name="b5cfed2b0d717e4e3568b0529a9dec77"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetValueFromString" ref="b5cfed2b0d717e4e3568b0529a9dec77" args="(const wxString &amp;text, int flags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGPropertyWithChildren::SetValueFromString           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This overridden version converts comma or semicolon separated tokens into child values. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm#bed75d94651bd8ab5415183f10b9f464">wxPGProperty</a>.
<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#836e6f3324e94fcfad217d037345fa3a">wxCustomPropertyClass</a>.
</div>
</div><p>
<a class="anchor" name="5c5be1292d329945b0a24e33db485207"></a><!-- doxytag: member="wxPGPropertyWithChildren::SetValueImage" ref="5c5be1292d329945b0a24e33db485207" args="(wxBitmap &amp;bmp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetValueImage           </td>
          <td>(</td>
          <td class="paramtype">wxBitmap &amp;&nbsp;</td>
          <td class="paramname"> <em>bmp</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set wxBitmap in front of the value. 
<p>
This bitmap will be ignored if property class has implemented OnCustomPaint. 
</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>propgrid.h</ul>
<hr size="1"><address style="align: right;"><small>Generated on Sun Dec 3 13:35:16 2006 for wxPropertyGrid by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1-p1 </small></address>
</body>
</html>
